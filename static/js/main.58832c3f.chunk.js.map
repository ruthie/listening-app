{"version":3,"sources":["AnswerButton.js","PlayButton.js","IntervalExercise.js","ContinueButton.js","Quiz.js","QuizController.js","App.js","index.js"],"names":["AnswerButton","text","onClick","value","color","layoutClassName","className","PlayButton","INTERVAL_DISPLAY_INFO","m2","friendlyName","M2","m3","M3","P4","d5","P5","m6","M6","m7","M7","IntervalExercise","playInterval","bind","synth","Tone","Synth","toMaster","topNote","Teoria","interval","note","this","props","topNoteName","name","accidental","octave","triggerAttackRelease","now","Time","possibleAnswers","submittedAnswers","onAnswerClick","map","x","intervalName","toString","intervalFriendlyName","includes","key","Component","ContinueButton","Quiz","quizCompleted","currentExercise","numExercises","onContinueClick","POSSIBLE_INTERVALS","getRandomInt","max","Math","floor","random","QuizController","state","length","handleAnswerClick","handleContinueClick","e","setState","concat","currentTarget","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58832c3f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './AnswerButton.css';\n\nfunction AnswerButton({ text, onClick, value, color, layoutClassName }) {\n    return (\n        <button\n            value={value}\n            onClick={onClick}\n            className={`answer-button ${color} ${layoutClassName}`}\n        >\n            {text}\n        </button>\n    )\n}\n\nAnswerButton.propTypes = {\n    text: PropTypes.string,\n    value: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n    layoutClassName: PropTypes.string,\n}\n\nexport default AnswerButton\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MdVolumeUp } from 'react-icons/md';\n\nimport './PlayButton.css';\n\nfunction PlayButton({ onClick }) {\n    return (\n        <button onClick={onClick} className=\"play-button\">\n            <MdVolumeUp className=\"play-button-sound-icon\" />\n            Play Interval\n        </button>\n    )\n}\n\n\nPlayButton.propTypes = {\n    onClick: PropTypes.func,\n}\n\nexport default PlayButton\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport AnswerButton from './AnswerButton.js';\nimport PlayButton from './PlayButton.js';\nimport './PlayButton.css';\nimport './IntervalExercise.css';\n\n\nconst INTERVAL_DISPLAY_INFO = {\n    m2: {\n        friendlyName: 'Minor 2nd',\n        layoutClassName: 'minor2',\n    },\n    M2: {\n        friendlyName: 'Major 2nd',\n        layoutClassName: 'major2',\n    },\n    m3: {\n        friendlyName: 'Minor 3rd',\n        layoutClassName: 'minor3',\n    },\n    M3: {\n        friendlyName: 'Major 3rd',\n        layoutClassName: 'major3',\n    },\n    P4: {\n        friendlyName: 'Perfect 4th',\n        layoutClassName: 'perfect4',\n    },\n    d5: {\n        friendlyName: 'Diminished 5th',\n        layoutClassName: 'diminished5',\n    },\n    P5: {\n        friendlyName: 'Perfect 5th',\n        layoutClassName: 'perfect5',\n    },\n    m6: {\n        friendlyName: 'Minor 6th',\n        layoutClassName: 'minor6',\n    },\n    M6: {\n        friendlyName: 'Major 6th',\n        layoutClassName: 'major6',\n    },\n    m7: {\n        friendlyName: 'Minor 7th',\n        layoutClassName: 'minor7',\n    },\n    M7: {\n        friendlyName: 'Major 7th',\n        layoutClassName: 'major7',\n    },\n}\n\nclass IntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const synth = new Tone.Synth().toMaster()\n        const bottomNoteName = 'C4'\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNoteName), this.props.interval,\n        )\n        const topNoteName = topNote.name() + topNote.accidental() + topNote.octave()\n\n        synth.triggerAttackRelease(bottomNoteName, '4n')\n        synth.triggerAttackRelease(topNoteName, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { interval, possibleAnswers, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <PlayButton onClick={this.playInterval} />\n                <p className=\"instructions-text\">Identify the interval</p>\n                <div className=\"answer-buttons-container\">\n                    {possibleAnswers.map(x => {\n                        const intervalName = x.toString()\n                        const intervalFriendlyName = INTERVAL_DISPLAY_INFO[intervalName].friendlyName\n\n                        let color = 'white'\n                        if (submittedAnswers.includes(x.toString())) {\n                            color = intervalName === interval.toString() ? 'green' : 'red'\n                        }\n\n                        return (\n                            <AnswerButton\n                                key={intervalName}\n                                text={intervalFriendlyName}\n                                value={intervalName}\n                                color={color}\n                                onClick={onAnswerClick}\n                                layoutClassName={\n                                    INTERVAL_DISPLAY_INFO[intervalName].layoutClassName\n                                }\n                            />\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nIntervalExercise.propTypes = {\n    interval: PropTypes.object, // Teoria interval\n    possibleAnswers: PropTypes.arrayOf(PropTypes.object), // Array of Teoria intervals\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default IntervalExercise\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ContinueButton.css';\n\nfunction ContinueButton({ onClick }) {\n    return (\n        <button onClick={onClick} className=\"continue-button\">Continue</button>\n    )\n}\n\nContinueButton.propTypes = {\n    onClick: PropTypes.func,\n}\n\nexport default ContinueButton\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport IntervalExercise from './IntervalExercise.js'\nimport ContinueButton from './ContinueButton.js'\nimport './Quiz.css';\n\n\nclass Quiz extends Component {\n    render() {\n        const quizCompleted = (\n            // we've answered correctly\n            this.props.submittedAnswers.includes(this.props.interval.toString())\n            // and this is not the last exercise\n            && this.props.currentExercise < this.props.numExercises - 1\n        )\n\n        return (\n            <div className=\"quiz\">\n                <IntervalExercise\n                    interval={this.props.interval}\n                    possibleAnswers={this.props.possibleAnswers}\n                    submittedAnswers={this.props.submittedAnswers}\n                    onAnswerClick={this.props.onAnswerClick}\n                />\n                {quizCompleted && <ContinueButton onClick={this.props.onContinueClick} />}\n            </div>\n        )\n    }\n}\n\n\nQuiz.propTypes = {\n    interval: PropTypes.object, // Teoria interval\n    possibleAnswers: PropTypes.arrayOf(PropTypes.object), // Array of Teoria intervals\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n    numExercises: PropTypes.number,\n    currentExercise: PropTypes.number,\n    onContinueClick: PropTypes.func,\n}\n\nexport default Quiz\n","import React, { Component } from 'react';\nimport Teoria from 'teoria';\n\nimport Quiz from './Quiz.js'\n\nconst POSSIBLE_INTERVALS = [\n    Teoria.interval('m2'),\n    Teoria.interval('M2'),\n    Teoria.interval('m3'),\n    Teoria.interval('M3'),\n    Teoria.interval('P4'),\n    Teoria.interval('d5'),\n    Teoria.interval('P5'),\n    Teoria.interval('m6'),\n    Teoria.interval('M6'),\n    Teoria.interval('m7'),\n    Teoria.interval('M7'),\n    // TODO: include octave\n\n]\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nclass QuizController extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            numExercises: 10,\n            currentExercise: 0,\n            interval: POSSIBLE_INTERVALS[getRandomInt(POSSIBLE_INTERVALS.length)],\n            submittedAnswers: [],\n        }\n\n        this.handleAnswerClick = this.handleAnswerClick.bind(this)\n        this.handleContinueClick = this.handleContinueClick.bind(this)\n    }\n\n    handleAnswerClick(e) {\n        this.setState({\n            submittedAnswers: this.state.submittedAnswers.concat([e.currentTarget.value]),\n        })\n    }\n\n    handleContinueClick() {\n        this.setState({\n            submittedAnswers: [],\n            interval: POSSIBLE_INTERVALS[getRandomInt(POSSIBLE_INTERVALS.length)],\n            currentExercise: this.state.currentExercise + 1,\n        })\n    }\n\n    render() {\n        return (\n            <Quiz\n                interval={this.state.interval}\n                possibleAnswers={POSSIBLE_INTERVALS}\n                submittedAnswers={this.state.submittedAnswers}\n                onAnswerClick={this.handleAnswerClick}\n                numExercises={this.state.numExercises}\n                currentExercise={this.state.currentExercise}\n                onContinueClick={this.handleContinueClick}\n            />\n        )\n    }\n}\n\nexport default QuizController\n","import React from 'react';\nimport QuizController from './QuizController'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <QuizController />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));  /* eslint-disable-line */\n"],"sourceRoot":""}