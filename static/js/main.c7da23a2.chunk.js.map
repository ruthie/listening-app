{"version":3,"sources":["CircleIcon/symbols.js","CircleIcon/index.js","Home.js","Button.js","Quiz.js","QuizCompleted.js","QuizController.js","utils.js","AnswerButtons.js","PlayButton.js","InstructionsText.js","UpwardIntervalExercise.js","DownwardIntervalExercise.js","SimultaneousIntervalExercise.js","UpwardIntervalTuningExercise.js","DownwardIntervalTuningExercise.js","SimultaneousIntervalTuningExercise.js","App.js","index.js"],"names":["UPWARD","transform","className","d","DOWNWARD","SIMULTANEOUS","COLOR_MAP","blue","circle","stroke","icon","green","SYMBOL_MAP","upward","downward","simultaneous","CircleIcon","symbol","color","viewBox","fill","cx","CIRCLE_WIDTH","cy","r","id","clipPath","strokeWidth","defaultProps","Home","to","href","Component","Button","props","Quiz","state","currentExercise","exerciseInfo","questionGenerator","submittedAnswers","numFirstTry","handleAnswerClick","bind","handleContinueClick","handleFinishClick","e","submittedAnswer","currentTarget","value","this","length","answer","setState","concat","onFinishClick","questionCompleted","includes","isLastExercise","numExercises","exerciseClass","onAnswerClick","onClick","QuizCompleted","message","onAgainClick","NUM_EXERCISES","Number","parseInt","process","QuizController","finished","handleAgainClick","resetQuiz","getRandomInt","max","Math","floor","random","INTERVAL_INFO","m2","friendlyName","layoutClassName","M2","m3","M3","P4","d5","P5","m6","M6","m7","M7","ALL_INTERVALS","Object","keys","TUNING_INTERVALS","getRandomItemFromList","list","getRandomInterval","getRandomTuningInterval","POSSIBLE_DIRECTIONS","getRandomDirection","getRandomNoteInOctaveAbove","bottomNoteName","topNote","Teoria","interval","note","name","accidental","octave","getRandomPitchDeviation","AnswerButton","text","IntervalAnswerButtons","entries","map","intervalName","intervalFriendlyName","correctAnswer","toString","key","SharpFlatAnswerButtons","direction","string","charAt","toUpperCase","slice","PlayButton","InstructionsText","generateUpwardIntervalExercise","bottomNote","UpwardIntervalExercise","playInterval","synth","Tone","Synth","toMaster","topNoteName","triggerAttackRelease","now","Time","generateDownwardIntervalExercise","DownwardIntervalExercise","generateSimultaneousIntervalExercise","SimultaneousIntervalExercise","PolySynth","generateUpwardIntervalTuningExercise","pitchDeviation","UpwardIntervalTuningExercise","adjustedTopNotFreq","fq","toLowerCase","generateDownwardIntervalTuningExercise","DownwardIntervalTuningExercise","downwardInterval","adjustedBottomNotFreq","generateSimultaneousIntervalTuningExercise","SimultaneousIntervalTuningExercise","adjustedTopNoteFreq","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7da23a2.chunk.js","sourcesContent":["import React from 'react'\n\nexport const UPWARD = (\n    <g transform=\"translate(20 0)\">\n        <path className=\"cicon__foreground\" d=\"M45.76,60.39V0H43V55.81c-3.26-2.47-8.9-2.74-14.29-.33C21.81,58.6,17.91,65,20.06,69.8s9.53,6.14,16.48,3c.43-.2.88-.36,1.29-.58C43.14,69.39,46.3,64.55,45.76,60.39Z\" transform=\"translate(-19.47)\" />\n        <path className=\"cicon__foreground\" d=\"M79.94,30.2c-2.15-4.79-9.53-6.14-16.48-3-.43.2-.88.36-1.29.58-5.31,2.85-8.47,7.69-7.93,11.85V100H57V44.19c3.26,2.47,8.9,2.75,14.29.33C78.19,41.4,82.09,35,79.94,30.2Z\" transform=\"translate(-19.47)\" />\n    </g>\n)\n\nexport const DOWNWARD = (\n    <g transform=\"translate(23 5)\">\n        <path className=\"cicon__foreground\" d=\"M77.33,59.48V5.12H74.89V55.36c-2.94-2.23-8-2.48-12.86-.3C55.77,57.87,52.27,63.64,54.2,68S62.78,73.47,69,70.66c.39-.18.79-.32,1.16-.52C75,67.58,77.82,63.22,77.33,59.48Z\" transform=\"translate(-22.43 -5.13)\" />\n        <path className=\"cicon__foreground\" d=\"M45.61,32.3C43.68,28,37,26.78,30.78,29.59c-.39.18-.79.32-1.16.52C24.84,32.67,22,37,22.48,40.77V95.12h2.45V44.89c2.94,2.23,8,2.48,12.86.3C44,42.38,47.54,36.61,45.61,32.3Z\" transform=\"translate(-22.43 -5.13)\" />\n    </g>\n)\n\nexport const SIMULTANEOUS = (\n    <g transform=\"translate(36 -10)\">\n        <path className=\"cicon__foreground\" d=\"M62.19,44.76a6.43,6.43,0,0,0,0-1.64V-11.23H59.75V39c-2.94-2.22-8-2.48-12.86-.3-6.25,2.81-9.76,8.58-7.82,12.89s8.57,5.52,14.83,2.71c.39-.17.79-.32,1.16-.52A16,16,0,0,0,59.75,50v14.6c-2.94-2.22-8-2.47-12.86-.29-6.25,2.81-9.76,8.58-7.82,12.88s8.57,5.52,14.83,2.72c.39-.18.79-.33,1.16-.53,4.78-2.56,7.62-6.91,7.13-10.66Z\" transform=\"translate(-38.53 11.23)\" />\n    </g>\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { UPWARD, DOWNWARD, SIMULTANEOUS } from './symbols.js'\n\nimport './index.css'\n\nconst COLOR_MAP = {\n    blue: { circle: '#1D8FF9', stroke: '#0060B9', icon: '#FFF' },\n    green: { circle: '#60BD47', stroke: '#599748', icon: '#FFF' },\n}\n\nconst SYMBOL_MAP = {\n    upward: UPWARD,\n    downward: DOWNWARD,\n    simultaneous: SIMULTANEOUS,\n}\n\nconst STROKE_WIDTH = 8\nconst CIRCLE_WIDTH = 100\n\nexport default function CircleIcon({\n    className,\n    symbol,\n    color,\n}) {\n    return (\n        <svg className={`cicon ${className}`} viewBox={`0 0 ${CIRCLE_WIDTH} ${CIRCLE_WIDTH}`}>\n            {/*\n                Circle Fill\n                We make the circle slightly larger than it needs to be to ensure\n                no edge pixel issues\n            */}\n            <circle\n                fill={COLOR_MAP[color].circle}\n                cx={CIRCLE_WIDTH / 2}\n                cy={CIRCLE_WIDTH / 2}\n                r={(CIRCLE_WIDTH - STROKE_WIDTH * 0.75) / 2}\n            />\n            {/* Icon */}\n            <clipPath id=\"symbol-clip\">\n                <circle\n                    cx={CIRCLE_WIDTH / 2}\n                    cy={CIRCLE_WIDTH / 2}\n                    r={(CIRCLE_WIDTH - STROKE_WIDTH * 0.75) / 2}\n                />\n            </clipPath>\n            <g clipPath=\"url(#symbol-clip)\">\n                {SYMBOL_MAP[symbol]}\n            </g>\n            {/* Circle Stroke */}\n            <circle\n                stroke={COLOR_MAP[color].stroke}\n                strokeWidth={STROKE_WIDTH}\n                fill=\"none\"\n                cx={CIRCLE_WIDTH / 2}\n                cy={CIRCLE_WIDTH / 2}\n                r={(CIRCLE_WIDTH - STROKE_WIDTH) / 2}\n            />\n        </svg>\n    )\n}\n\nCircleIcon.defaultProps = {\n    className: '',\n    color: 'blue',\n    symbol: 'upward',\n}\n\nCircleIcon.propTypes = {\n    className: PropTypes.string,\n    color: PropTypes.oneOf(Object.keys(COLOR_MAP)),\n    symbol: PropTypes.oneOf(Object.keys(SYMBOL_MAP)),\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport CircleIcon from './CircleIcon/index.js'\n\nimport './Home.css'\nimport './LinkButton.css'\nimport './App.css'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"top-bar\">\n                    <p className=\"max-width\">\n                        Ruthie&apos;s Listening App\n                    </p>\n                </div>\n\n                <div className=\"max-width content\">\n\n                    <div className=\"three-exercise-container\">\n                        <Link\n                            to=\"/upward-intervals\"\n                            className=\"exercise-link\"\n                        >\n                            <CircleIcon color=\"blue\" symbol=\"upward\" />\n                            <div> Upward Interval Identification</div>\n                        </Link>\n                        <Link\n                            to=\"/downward-intervals\"\n                            className=\"exercise-link\"\n                        >\n                            <CircleIcon color=\"blue\" symbol=\"downward\" />\n                            <div> Downward Interval Identification</div>\n                        </Link>\n                        <Link\n                            to=\"/simultaneous-intervals\"\n                            className=\"exercise-link\"\n                        >\n                            <CircleIcon color=\"blue\" symbol=\"simultaneous\" />\n                            <div> Simultaneous Interval Identification</div>\n                        </Link>\n                    </div>\n\n                    <div className=\"three-exercise-container\">\n                        <Link\n                            to=\"/upward-interval-tuning\"\n                            className=\"exercise-link\"\n                        >\n                            <CircleIcon color=\"green\" symbol=\"upward\" />\n                            <div> Upward Interval Tuning</div>\n                        </Link>\n                        <Link\n                            to=\"/downward-interval-tuning\"\n                            className=\"exercise-link\"\n                        >\n                            <CircleIcon color=\"green\" symbol=\"downward\" />\n                            <div> Downward Interval Tuning</div>\n                        </Link>\n                        <Link\n                            to=\"/simultaneous-interval-tuning\"\n                            className=\"exercise-link\"\n                        >\n                            <CircleIcon color=\"green\" symbol=\"simultaneous\" />\n                            <div> Simultaneous Interval Tuning</div>\n                        </Link>\n                    </div>\n\n                    <a\n                        href=\"https://github.com/ruthie/listening-app\"\n                        className=\"source-link\"\n                    >\n                        Source Code\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.css';\n\nfunction Button({ className, ...props }) {\n    return (\n        <button className={`button ${className}`} {...props} />\n    )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n    text: PropTypes.string,\n}\n\nexport default Button\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from './Button.js'\nimport './Quiz.css';\n\n\nclass Quiz extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currentExercise: 0,\n            exerciseInfo: this.props.questionGenerator(),\n            submittedAnswers: [],\n            numFirstTry: 0,\n        }\n\n        this.handleAnswerClick = this.handleAnswerClick.bind(this)\n        this.handleContinueClick = this.handleContinueClick.bind(this)\n        this.handleFinishClick = this.handleFinishClick.bind(this)\n    }\n\n    handleAnswerClick(e) {\n        const submittedAnswer = e.currentTarget.value\n\n        if (\n            // this is the first guess for this question\n            this.state.submittedAnswers.length === 0\n            // and it was correct\n            && submittedAnswer === this.state.exerciseInfo.answer\n        ) {\n            this.setState({\n                numFirstTry: this.state.numFirstTry + 1,\n            })\n        }\n\n        this.setState({\n            submittedAnswers: this.state.submittedAnswers.concat([submittedAnswer]),\n        })\n    }\n\n    handleContinueClick() {\n        this.setState({\n            submittedAnswers: [],\n            exerciseInfo: this.props.questionGenerator(),\n            currentExercise: this.state.currentExercise + 1,\n        })\n    }\n\n    handleFinishClick() {\n        this.props.onFinishClick(this.state.numFirstTry)\n\n        // clear quiz state for next time\n        this.setState({\n            currentExercise: 0,\n            exerciseInfo: this.props.questionGenerator(),\n            submittedAnswers: [],\n            numFirstTry: 0,\n        })\n    }\n\n    render() {\n        const questionCompleted = (\n            // we've answered correctly\n            this.state.submittedAnswers.includes(this.state.exerciseInfo.answer)\n        )\n        const isLastExercise = (\n            // and this is not the last exercise\n            this.state.currentExercise === this.props.numExercises - 1\n        )\n\n        return (\n            <div className=\"quiz content max-width\">\n                <this.props.exerciseClass\n                    answer={this.state.exerciseInfo.answer}\n                    exerciseInfo={this.state.exerciseInfo}\n                    submittedAnswers={this.state.submittedAnswers}\n                    onAnswerClick={this.handleAnswerClick}\n                />\n                {questionCompleted && (\n                    isLastExercise ? (\n                        <Button\n                            onClick={this.handleFinishClick}\n                            className=\"finish-button\"\n                        >\n                            Finish\n                        </Button>\n                    ) : (\n                        <Button\n                            onClick={this.handleContinueClick}\n                            className=\"continue-button\"\n                        >\n                            Continue\n                        </Button>\n                    ))}\n            </div>\n        )\n    }\n}\n\n\nQuiz.propTypes = {\n    numExercises: PropTypes.number,\n    onFinishClick: PropTypes.func,\n\n    /* ExerciseClass and questionGenerator\n    *  The questionGenerator function needs to return an object that has\n    *  an answer key and any additional keys needed by the exercise class\n    *  For  example, for identifying intervals, the exercise needs to know\n    *  the correct answer, e.g. a fifth, but also needs to know what note to\n    *  start playing  on, so the object returned by the questionGenerator might\n    *  look like { answer: 'P5', bottomNote: 'C4'}\n    */\n    // disabling eslint for the following line because eslint can't tell\n    // that exerciseClass is actually used\n    exerciseClass: PropTypes.elementType, // eslint-disable-line\n    questionGenerator: PropTypes.func,\n}\n\nexport default Quiz\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Button from './Button.js'\nimport './QuizCompleted.css'\n\nclass QuizCompleted extends Component {\n    render() {\n        const message = `You got ${this.props.numFirstTry} out of ${this.props.numExercises} on the first try!`;\n        return (\n            <div className=\"content max-width\">\n                <p>\n                    {message}\n                </p>\n                <Button\n                    className=\"again-button\"\n                    onClick={this.props.onAgainClick}\n                >\n                    Try again\n                </Button>\n\n                <Link\n                    to=\"/\"\n                    className=\"link-button home-button\"\n                >\n                    Home\n                </Link>\n            </div>\n        )\n    }\n}\n\nQuizCompleted.propTypes = {\n    onAgainClick: PropTypes.func,\n    numFirstTry: PropTypes.number,\n    numExercises: PropTypes.number,\n}\n\nexport default QuizCompleted\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Quiz from './Quiz.js'\nimport QuizCompleted from './QuizCompleted.js'\n\nconst NUM_EXERCISES = Number.parseInt(process.env.REACT_APP_NUM_QUESTIONS_IN_QUIZ, 10)\n\nclass QuizController extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            numExercises: NUM_EXERCISES,\n            finished: false,\n            numFirstTry: 0,\n        }\n\n        this.handleFinishClick = this.handleFinishClick.bind(this)\n        this.handleAgainClick = this.handleAgainClick.bind(this)\n        this.resetQuiz = this.resetQuiz.bind(this)\n    }\n\n    handleFinishClick(numFirstTry) {\n        this.setState({\n            finished: true,\n            numFirstTry: numFirstTry,\n        })\n    }\n\n    resetQuiz() {\n        this.setState({\n            numExercises: NUM_EXERCISES,\n            finished: false,\n            numFirstTry: 0,\n        })\n    }\n\n    handleAgainClick() {\n        this.resetQuiz()\n    }\n\n    render() {\n        const renderedComponent = (\n            this.state.finished\n                ? (\n                    <QuizCompleted\n                        onAgainClick={this.handleAgainClick}\n                        numExercises={this.state.numExercises}\n                        numFirstTry={this.state.numFirstTry}\n                    />\n                )\n                : (\n                    <Quiz\n                        numExercises={this.state.numExercises}\n                        onFinishClick={this.handleFinishClick}\n                        exerciseClass={this.props.exerciseClass}\n                        questionGenerator={this.props.questionGenerator}\n                    />\n                )\n        )\n\n        return renderedComponent\n    }\n}\n\nQuizController.propTypes = {\n    exerciseClass: PropTypes.elementType,\n    questionGenerator: PropTypes.func,\n}\n\nexport default QuizController\n","import Teoria from 'teoria';\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport const INTERVAL_INFO = {\n    m2: {\n        friendlyName: 'Minor 2nd',\n        layoutClassName: 'minor2',\n    },\n    M2: {\n        friendlyName: 'Major 2nd',\n        layoutClassName: 'major2',\n    },\n    m3: {\n        friendlyName: 'Minor 3rd',\n        layoutClassName: 'minor3',\n    },\n    M3: {\n        friendlyName: 'Major 3rd',\n        layoutClassName: 'major3',\n    },\n    P4: {\n        friendlyName: 'Perfect 4th',\n        layoutClassName: 'perfect4',\n    },\n    d5: {\n        friendlyName: 'Diminished 5th',\n        layoutClassName: 'diminished5',\n    },\n    P5: {\n        friendlyName: 'Perfect 5th',\n        layoutClassName: 'perfect5',\n    },\n    m6: {\n        friendlyName: 'Minor 6th',\n        layoutClassName: 'minor6',\n    },\n    M6: {\n        friendlyName: 'Major 6th',\n        layoutClassName: 'major6',\n    },\n    m7: {\n        friendlyName: 'Minor 7th',\n        layoutClassName: 'minor7',\n    },\n    M7: {\n        friendlyName: 'Major 7th',\n        layoutClassName: 'major7',\n    },\n}\n\nconst ALL_INTERVALS = Object.keys(INTERVAL_INFO)\nconst TUNING_INTERVALS = ['M2', 'm3', 'M3', 'P4', 'P5']\n\nfunction getRandomItemFromList(list) {\n    return list[getRandomInt(list.length)]\n}\n\nexport function getRandomInterval() {\n    return getRandomItemFromList(ALL_INTERVALS)\n}\n\nexport function getRandomTuningInterval() {\n    return getRandomItemFromList(TUNING_INTERVALS)\n}\n\nexport const POSSIBLE_DIRECTIONS = ['sharp', 'flat'];\n\nexport function getRandomDirection() {\n    return POSSIBLE_DIRECTIONS[getRandomInt(POSSIBLE_DIRECTIONS.length)]\n}\n\n/* Returns a random note name between C4 and C5 inclusive\n*/\nexport function getRandomNoteInOctaveAbove(bottomNoteName) {\n    // Doing this a silly way:  choose bottom note and add a random interval to it\n    const topNote = Teoria.interval(\n        Teoria.note(bottomNoteName), Teoria.interval(getRandomInterval()),\n    )\n    return topNote.name() + topNote.accidental() + topNote.octave()\n}\n\nexport function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function getRandomPitchDeviation() {\n    // For our two test subjects, 1.02 was barely possible\n    return Math.random() * (1.03 - 1.025) + 1.025\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { INTERVAL_INFO, POSSIBLE_DIRECTIONS, capitalizeFirstLetter } from './utils.js'\n\nimport './AnswerButtons.css';\n\nfunction AnswerButton({ text, onClick, value, color, layoutClassName }) {\n    return (\n        <button\n            value={value}\n            onClick={onClick}\n            className={`answer-button ${color} ${layoutClassName}`}\n        >\n            {text}\n        </button>\n    )\n}\n\nAnswerButton.propTypes = {\n    text: PropTypes.string,\n    value: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n    layoutClassName: PropTypes.string,\n}\n\nexport class IntervalAnswerButtons extends Component {\n    render() {\n        return (\n            <div className=\"interval-answer-buttons-container\">\n                {Object.entries(INTERVAL_INFO).map(([intervalName, displayInfo]) => {\n                    const intervalFriendlyName = displayInfo.friendlyName\n\n                    let color = 'white'\n                    if (this.props.submittedAnswers.includes(intervalName)) {\n                        color = intervalName === this.props.correctAnswer.toString() ? 'green' : 'red'\n                    }\n\n                    return (\n                        <AnswerButton\n                            key={intervalName}\n                            text={intervalFriendlyName}\n                            value={intervalName}\n                            color={color}\n                            onClick={this.props.onAnswerClick}\n                            layoutClassName={\n                                INTERVAL_INFO[intervalName].layoutClassName\n                            }\n                        />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nIntervalAnswerButtons.propTypes = {\n    correctAnswer: PropTypes.string,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string),\n    onAnswerClick: PropTypes.func,\n}\n\nexport class SharpFlatAnswerButtons extends Component {\n    render() {\n        return (\n            <div className=\"sharp-flat-answer-buttons-container\">\n                {POSSIBLE_DIRECTIONS.map((direction) => {\n                    let color = 'white'\n                    if (this.props.submittedAnswers.includes(direction)) {\n                        color = direction === this.props.correctAnswer.toString() ? 'green' : 'red'\n                    }\n\n                    return (\n                        <AnswerButton\n                            key={direction}\n                            text={capitalizeFirstLetter(direction)}\n                            value={direction}\n                            color={color}\n                            onClick={this.props.onAnswerClick}\n                            layoutClassName={direction}\n                        />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nSharpFlatAnswerButtons.propTypes = {\n    correctAnswer: PropTypes.string,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string),\n    onAnswerClick: PropTypes.func,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MdVolumeUp } from 'react-icons/md';\n\nimport Button from './Button.js'\nimport './PlayButton.css'\n\nfunction PlayButton({ onClick }) {\n    return (\n        <Button\n            onClick={onClick}\n            className=\"play-button\"\n        >\n            <div>\n                <MdVolumeUp className=\"play-button-sound-icon\" />\n                Play Interval\n            </div>\n        </Button>\n    )\n}\n\nPlayButton.propTypes = {\n    onClick: PropTypes.func,\n}\n\nexport default PlayButton\n","import React from 'react';\n\nimport './InstructionsText.css'\n\nfunction InstructionsText(props) {\n    return (\n        <p className=\"instructions-text\" {...props} />\n    )\n}\n\nexport default InstructionsText\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomInterval, getRandomNoteInOctaveAbove } from './utils.js';\nimport { IntervalAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\nexport function generateUpwardIntervalExercise() {\n    return {\n        answer: getRandomInterval(),\n        bottomNote: getRandomNoteInOctaveAbove('B3'),\n    }\n}\n\nclass UpwardIntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const synth = new Tone.Synth().toMaster()\n        const bottomNoteName = this.props.exerciseInfo.bottomNote\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNoteName), Teoria.interval(this.props.answer),\n        )\n        const topNoteName = topNote.name() + topNote.accidental() + topNote.octave()\n\n        synth.triggerAttackRelease(bottomNoteName, '4n')\n        synth.triggerAttackRelease(topNoteName, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { answer, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>Identify the interval</InstructionsText>\n\n                <IntervalAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nUpwardIntervalExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default UpwardIntervalExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomInterval, getRandomNoteInOctaveAbove } from './utils.js';\nimport { IntervalAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\nexport function generateDownwardIntervalExercise() {\n    return {\n        answer: getRandomInterval(),\n        topNote: getRandomNoteInOctaveAbove('B4'),\n    }\n}\n\nclass DownwardIntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n    playInterval() {\n        const interval = Teoria.interval(this.props.answer).direction('down');\n\n        const synth = new Tone.Synth().toMaster()\n        const topNoteName = this.props.exerciseInfo.topNote\n        const bottomNote = Teoria.interval(\n            Teoria.note(topNoteName), interval,\n        )\n        const bottomNoteName = bottomNote.name() + bottomNote.accidental() + bottomNote.octave()\n\n        synth.triggerAttackRelease(topNoteName, '4n')\n        synth.triggerAttackRelease(bottomNoteName, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { answer, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>Identify the interval</InstructionsText>\n                <IntervalAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nDownwardIntervalExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default DownwardIntervalExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomInterval, getRandomNoteInOctaveAbove } from './utils.js';\nimport { IntervalAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\nexport function generateSimultaneousIntervalExercise() {\n    return {\n        answer: getRandomInterval(),\n        bottomNote: getRandomNoteInOctaveAbove('B3'),\n    }\n}\n\nclass SimultaneousIntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n    playInterval() {\n        const interval = Teoria.interval(this.props.answer)\n\n        const synth = new Tone.PolySynth(2, Tone.Synth).toMaster()\n        const bottomNoteName = this.props.exerciseInfo.bottomNote\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNoteName), interval,\n        )\n        const topNoteName = topNote.name() + topNote.accidental() + topNote.octave()\n\n        synth.triggerAttackRelease([bottomNoteName, topNoteName], '2n')\n    }\n\n    render() {\n        const { answer, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>Identify the interval</InstructionsText>\n                <IntervalAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nSimultaneousIntervalExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default SimultaneousIntervalExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomTuningInterval, getRandomNoteInOctaveAbove, getRandomDirection,\n    INTERVAL_INFO, getRandomPitchDeviation } from './utils.js';\nimport { SharpFlatAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\n\nexport function generateUpwardIntervalTuningExercise() {\n    return {\n        answer: getRandomDirection(),\n        interval: getRandomTuningInterval(),\n        bottomNote: getRandomNoteInOctaveAbove('B3'),\n        pitchDeviation: getRandomPitchDeviation(),\n    }\n}\n\nclass UpwardIntervalTuningExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const { bottomNote, pitchDeviation } = this.props.exerciseInfo\n\n        const synth = new Tone.Synth().toMaster()\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNote), Teoria.interval(this.props.exerciseInfo.interval),\n        )\n        const inTuneTopNoteFreq = topNote.fq();\n\n        const adjustmentRatio = this.props.answer === 'sharp' ? pitchDeviation : 1.0 / pitchDeviation\n        const adjustedTopNotFreq = inTuneTopNoteFreq * adjustmentRatio\n\n        synth.triggerAttackRelease(bottomNote, '4n')\n        synth.triggerAttackRelease(adjustedTopNotFreq, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { answer, exerciseInfo, submittedAnswers, onAnswerClick } = this.props;\n        const intervalName = INTERVAL_INFO[exerciseInfo.interval].friendlyName.toLowerCase()\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>\n                    Is the second note sharp or flat of a {intervalName} above the first note?\n                </InstructionsText>\n\n                <SharpFlatAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nUpwardIntervalTuningExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default UpwardIntervalTuningExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomTuningInterval, getRandomNoteInOctaveAbove, getRandomDirection,\n    INTERVAL_INFO, getRandomPitchDeviation } from './utils.js';\nimport { SharpFlatAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\n\nexport function generateDownwardIntervalTuningExercise() {\n    return {\n        answer: getRandomDirection(),\n        interval: getRandomTuningInterval(),\n        topNote: getRandomNoteInOctaveAbove('B3'),\n        pitchDeviation: getRandomPitchDeviation(),\n    }\n}\n\nclass DownwardIntervalTuningExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const { topNote, pitchDeviation, interval } = this.props.exerciseInfo\n        const downwardInterval = Teoria.interval(interval).direction('down');\n\n        const synth = new Tone.Synth().toMaster()\n        const bottomNote = Teoria.interval(\n            Teoria.note(topNote), downwardInterval,\n        )\n        const inTuneBottomNoteFreq = bottomNote.fq();\n\n        const adjustmentRatio = this.props.answer === 'sharp' ? pitchDeviation : 1.0 / pitchDeviation\n        const adjustedBottomNotFreq = inTuneBottomNoteFreq * adjustmentRatio\n\n        synth.triggerAttackRelease(topNote, '4n')\n        synth.triggerAttackRelease(adjustedBottomNotFreq, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { answer, exerciseInfo, submittedAnswers, onAnswerClick } = this.props;\n        const intervalName = INTERVAL_INFO[exerciseInfo.interval].friendlyName.toLowerCase()\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>\n                    Is the second note sharp or flat of a {intervalName} below the first note?\n                </InstructionsText>\n\n                <SharpFlatAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nDownwardIntervalTuningExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default DownwardIntervalTuningExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomTuningInterval, getRandomNoteInOctaveAbove, getRandomDirection,\n    INTERVAL_INFO, getRandomPitchDeviation } from './utils.js';\nimport { SharpFlatAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\n\nexport function generateSimultaneousIntervalTuningExercise() {\n    return {\n        answer: getRandomDirection(),\n        interval: getRandomTuningInterval(),\n        bottomNote: getRandomNoteInOctaveAbove('B3'),\n        pitchDeviation: getRandomPitchDeviation(),\n    }\n}\n\nclass SimultaneousIntervalTuningExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const { bottomNote, pitchDeviation } = this.props.exerciseInfo\n\n        const synth = new Tone.PolySynth(2, Tone.Synth).toMaster()\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNote), Teoria.interval(this.props.exerciseInfo.interval),\n        )\n        const inTuneTopNoteFreq = topNote.fq();\n\n        const adjustmentRatio = this.props.answer === 'sharp' ? pitchDeviation : 1.0 / pitchDeviation\n        const adjustedTopNoteFreq = inTuneTopNoteFreq * adjustmentRatio\n\n        synth.triggerAttackRelease([bottomNote, adjustedTopNoteFreq], '2n')\n    }\n\n    render() {\n        const { answer, exerciseInfo, submittedAnswers, onAnswerClick } = this.props;\n        const intervalName = INTERVAL_INFO[exerciseInfo.interval].friendlyName.toLowerCase()\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>\n                    Is the top note sharp or flat of a {intervalName} above the bottom note?\n                </InstructionsText>\n\n                <SharpFlatAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nSimultaneousIntervalTuningExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default SimultaneousIntervalTuningExercise\n","import React from 'react';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\n\nimport './App.css';\nimport Home from './Home.js';\nimport QuizController from './QuizController.js';\n\nimport UpwardIntervalExercise, { generateUpwardIntervalExercise } from './UpwardIntervalExercise.js'\nimport DownwardIntervalExercise, { generateDownwardIntervalExercise } from './DownwardIntervalExercise.js'\nimport SimultaneousIntervalExercise, { generateSimultaneousIntervalExercise } from './SimultaneousIntervalExercise.js'\nimport UpwardIntervalTuningExercise, { generateUpwardIntervalTuningExercise } from './UpwardIntervalTuningExercise.js'\nimport DownwardIntervalTuningExercise, { generateDownwardIntervalTuningExercise } from './DownwardIntervalTuningExercise.js'\nimport SimultaneousIntervalTuningExercise, { generateSimultaneousIntervalTuningExercise } from './SimultaneousIntervalTuningExercise.js'\n\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"app\">\n                <Switch>\n                    <Route path=\"/upward-intervals\">\n                        <QuizController\n                            exerciseClass={UpwardIntervalExercise}\n                            questionGenerator={generateUpwardIntervalExercise}\n                        />\n                    </Route>\n                    <Route path=\"/downward-intervals\">\n                        <QuizController\n                            exerciseClass={DownwardIntervalExercise}\n                            questionGenerator={generateDownwardIntervalExercise}\n                        />\n                    </Route>\n                    <Route path=\"/simultaneous-intervals\">\n                        <QuizController\n                            exerciseClass={SimultaneousIntervalExercise}\n                            questionGenerator={generateSimultaneousIntervalExercise}\n                        />\n                    </Route>\n                    <Route path=\"/upward-interval-tuning\">\n                        <QuizController\n                            exerciseClass={UpwardIntervalTuningExercise}\n                            questionGenerator={generateUpwardIntervalTuningExercise}\n                        />\n                    </Route>\n                    <Route path=\"/downward-interval-tuning\">\n                        <QuizController\n                            exerciseClass={DownwardIntervalTuningExercise}\n                            questionGenerator={generateDownwardIntervalTuningExercise}\n                        />\n                    </Route>\n                    <Route path=\"/simultaneous-interval-tuning\">\n                        <QuizController\n                            exerciseClass={SimultaneousIntervalTuningExercise}\n                            questionGenerator={generateSimultaneousIntervalTuningExercise}\n                        />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));  /* eslint-disable-line */\n"],"sourceRoot":""}