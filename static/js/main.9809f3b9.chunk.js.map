{"version":3,"sources":["Home.js","AnswerButton.js","Button.js","IntervalExercise.js","Quiz.js","QuizCompleted.js","QuizController.js","App.js","index.js"],"names":["Home","to","className","Component","AnswerButton","text","onClick","value","color","layoutClassName","Button","props","INTERVAL_DISPLAY_INFO","m2","friendlyName","M2","m3","M3","P4","d5","P5","m6","M6","m7","M7","IntervalExercise","playInterval","bind","synth","Tone","Synth","toMaster","topNote","Teoria","interval","note","this","topNoteName","name","accidental","octave","triggerAttackRelease","now","Time","possibleAnswers","submittedAnswers","onAnswerClick","map","x","intervalName","toString","intervalFriendlyName","includes","key","Quiz","questionCompleted","isLastExercise","currentExercise","numExercises","onFinishClick","onContinueClick","QuizCompleted","message","numFirstTry","onAgainClick","POSSIBLE_INTERVALS","getRandomInt","max","Math","floor","random","QuizController","state","length","finished","handleAnswerClick","handleContinueClick","handleFinishClick","handleAgainClick","e","submittedInterval","currentTarget","setState","concat","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9809f3b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Home.css'\nimport './LinkButton.css'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <p>\n                    Welcome to the listening app\n                </p>\n\n                <Link\n                    to=\"/quiz\"\n                    className=\"link-button start-quiz-button\"\n                >\n                    Quiz\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './AnswerButton.css';\n\nfunction AnswerButton({ text, onClick, value, color, layoutClassName }) {\n    return (\n        <button\n            value={value}\n            onClick={onClick}\n            className={`answer-button ${color} ${layoutClassName}`}\n        >\n            {text}\n        </button>\n    )\n}\n\nAnswerButton.propTypes = {\n    text: PropTypes.string,\n    value: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n    layoutClassName: PropTypes.string,\n}\n\nexport default AnswerButton\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.css';\n\nfunction Button({ className, ...props }) {\n    return (\n        <button className={`button ${className}`} {...props} />\n    )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n    text: PropTypes.string,\n}\n\nexport default Button\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { MdVolumeUp } from 'react-icons/md';\n\nimport AnswerButton from './AnswerButton.js';\nimport Button from './Button.js';\nimport './IntervalExercise.css';\n\n\nconst INTERVAL_DISPLAY_INFO = {\n    m2: {\n        friendlyName: 'Minor 2nd',\n        layoutClassName: 'minor2',\n    },\n    M2: {\n        friendlyName: 'Major 2nd',\n        layoutClassName: 'major2',\n    },\n    m3: {\n        friendlyName: 'Minor 3rd',\n        layoutClassName: 'minor3',\n    },\n    M3: {\n        friendlyName: 'Major 3rd',\n        layoutClassName: 'major3',\n    },\n    P4: {\n        friendlyName: 'Perfect 4th',\n        layoutClassName: 'perfect4',\n    },\n    d5: {\n        friendlyName: 'Diminished 5th',\n        layoutClassName: 'diminished5',\n    },\n    P5: {\n        friendlyName: 'Perfect 5th',\n        layoutClassName: 'perfect5',\n    },\n    m6: {\n        friendlyName: 'Minor 6th',\n        layoutClassName: 'minor6',\n    },\n    M6: {\n        friendlyName: 'Major 6th',\n        layoutClassName: 'major6',\n    },\n    m7: {\n        friendlyName: 'Minor 7th',\n        layoutClassName: 'minor7',\n    },\n    M7: {\n        friendlyName: 'Major 7th',\n        layoutClassName: 'major7',\n    },\n}\n\nclass IntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const synth = new Tone.Synth().toMaster()\n        const bottomNoteName = 'C4'\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNoteName), this.props.interval,\n        )\n        const topNoteName = topNote.name() + topNote.accidental() + topNote.octave()\n\n        synth.triggerAttackRelease(bottomNoteName, '4n')\n        synth.triggerAttackRelease(topNoteName, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { interval, possibleAnswers, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <Button\n                    onClick={this.playInterval}\n                    className=\"play-button\"\n                >\n                    <div>\n                        <MdVolumeUp className=\"play-button-sound-icon\" />\n                        Play Interval\n                    </div>\n                </Button>\n                <p className=\"instructions-text\">Identify the interval</p>\n                <div className=\"answer-buttons-container\">\n                    {possibleAnswers.map(x => {\n                        const intervalName = x.toString()\n                        const intervalFriendlyName = INTERVAL_DISPLAY_INFO[intervalName].friendlyName\n\n                        let color = 'white'\n                        if (submittedAnswers.includes(x.toString())) {\n                            color = intervalName === interval.toString() ? 'green' : 'red'\n                        }\n\n                        return (\n                            <AnswerButton\n                                key={intervalName}\n                                text={intervalFriendlyName}\n                                value={intervalName}\n                                color={color}\n                                onClick={onAnswerClick}\n                                layoutClassName={\n                                    INTERVAL_DISPLAY_INFO[intervalName].layoutClassName\n                                }\n                            />\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nIntervalExercise.propTypes = {\n    interval: PropTypes.object, // Teoria interval\n    possibleAnswers: PropTypes.arrayOf(PropTypes.object), // Array of Teoria intervals\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default IntervalExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport IntervalExercise from './IntervalExercise.js'\nimport Button from './Button.js'\nimport './Quiz.css';\n\n\nclass Quiz extends Component {\n    render() {\n        const questionCompleted = (\n            // we've answered correctly\n            this.props.submittedAnswers.includes(this.props.interval.toString())\n\n        )\n        const isLastExercise = (\n            // and this is not the last exercise\n            this.props.currentExercise === this.props.numExercises - 1\n        )\n\n        return (\n            <div className=\"quiz\">\n                <IntervalExercise\n                    interval={this.props.interval}\n                    possibleAnswers={this.props.possibleAnswers}\n                    submittedAnswers={this.props.submittedAnswers}\n                    onAnswerClick={this.props.onAnswerClick}\n                />\n                {questionCompleted && (\n                    isLastExercise ? (\n                        <Button\n                            onClick={this.props.onFinishClick}\n                            className=\"finish-button\"\n                        >\n                            Finish\n                        </Button>\n                    ) : (\n                        <Button\n                            onClick={this.props.onContinueClick}\n                            className=\"continue-button\"\n                        >\n                            Continue\n                        </Button>\n                    ))}\n            </div>\n        )\n    }\n}\n\n\nQuiz.propTypes = {\n    interval: PropTypes.object, // Teoria interval\n    possibleAnswers: PropTypes.arrayOf(PropTypes.object), // Array of Teoria intervals\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n    numExercises: PropTypes.number,\n    currentExercise: PropTypes.number,\n    onContinueClick: PropTypes.func,\n    onFinishClick: PropTypes.func,\n}\n\nexport default Quiz\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Button from './Button.js'\nimport './QuizCompleted.css'\n\nclass QuizCompleted extends Component {\n    render() {\n        const message = `You got ${this.props.numFirstTry} out of ${this.props.numExercises} on the first try!`;\n        return (\n            <div>\n                <p>\n                    {message}\n                </p>\n                <Button\n                    className=\"again-button\"\n                    onClick={this.props.onAgainClick}\n                >\n                    Try again\n                </Button>\n\n                <Link\n                    to=\"/\"\n                    className=\"link-button home-button\"\n                >\n                    Home\n                </Link>\n            </div>\n        )\n    }\n}\n\nQuizCompleted.propTypes = {\n    onAgainClick: PropTypes.func,\n    numFirstTry: PropTypes.number,\n    numExercises: PropTypes.number,\n}\n\nexport default QuizCompleted\n","import React, { Component } from 'react';\nimport Teoria from 'teoria';\n\nimport Quiz from './Quiz.js'\nimport QuizCompleted from './QuizCompleted.js'\n\nconst POSSIBLE_INTERVALS = [\n    Teoria.interval('m2'),\n    Teoria.interval('M2'),\n    Teoria.interval('m3'),\n    Teoria.interval('M3'),\n    Teoria.interval('P4'),\n    Teoria.interval('d5'),\n    Teoria.interval('P5'),\n    Teoria.interval('m6'),\n    Teoria.interval('M6'),\n    Teoria.interval('m7'),\n    Teoria.interval('M7'),\n    // TODO: include octave\n\n]\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst NUM_EXERCISES = 10;\n\nclass QuizController extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            numExercises: NUM_EXERCISES,\n            currentExercise: 0,\n            interval: POSSIBLE_INTERVALS[getRandomInt(POSSIBLE_INTERVALS.length)],\n            submittedAnswers: [],\n            finished: false,\n            numFirstTry: 0,\n        }\n\n        this.handleAnswerClick = this.handleAnswerClick.bind(this)\n        this.handleContinueClick = this.handleContinueClick.bind(this)\n        this.handleFinishClick = this.handleFinishClick.bind(this)\n        this.handleAgainClick = this.handleAgainClick.bind(this)\n    }\n\n    handleAnswerClick(e) {\n        const submittedInterval = e.currentTarget.value\n\n        if (\n            // this is the first guess for this question\n            this.state.submittedAnswers.length === 0\n            // and it was correct\n            && submittedInterval === this.state.interval.toString()\n        ) {\n            this.setState({\n                numFirstTry: this.state.numFirstTry + 1,\n            })\n        }\n\n        this.setState({\n            submittedAnswers: this.state.submittedAnswers.concat([submittedInterval]),\n        })\n    }\n\n    handleContinueClick() {\n        this.setState({\n            submittedAnswers: [],\n            interval: POSSIBLE_INTERVALS[getRandomInt(POSSIBLE_INTERVALS.length)],\n            currentExercise: this.state.currentExercise + 1,\n        })\n    }\n\n    handleFinishClick() {\n        this.setState({\n            finished: true,\n        })\n    }\n\n    handleAgainClick() {\n        this.setState({\n            numExercises: NUM_EXERCISES,\n            currentExercise: 0,\n            interval: POSSIBLE_INTERVALS[getRandomInt(POSSIBLE_INTERVALS.length)],\n            submittedAnswers: [],\n            finished: false,\n            numFirstTry: 0,\n        })\n    }\n\n    render() {\n        const renderedComponent = (\n            this.state.finished\n                ? (\n                    <QuizCompleted\n                        onAgainClick={this.handleAgainClick}\n                        numExercises={this.state.numExercises}\n                        numFirstTry={this.state.numFirstTry}\n                    />\n                )\n                : (\n                    <Quiz\n                        interval={this.state.interval}\n                        possibleAnswers={POSSIBLE_INTERVALS}\n                        submittedAnswers={this.state.submittedAnswers}\n                        onAnswerClick={this.handleAnswerClick}\n                        numExercises={this.state.numExercises}\n                        currentExercise={this.state.currentExercise}\n                        onContinueClick={this.handleContinueClick}\n                        onFinishClick={this.handleFinishClick}\n                    />\n                )\n        )\n\n        return renderedComponent\n    }\n}\n\nexport default QuizController\n","import React from 'react';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link,\n} from 'react-router-dom';\n\nimport './App.css';\nimport Home from './Home.js';\nimport QuizController from './QuizController.js';\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"app\">\n                <Switch>\n                    <Route path=\"/Quiz\">\n                        <QuizController />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));  /* eslint-disable-line */\n"],"sourceRoot":""}