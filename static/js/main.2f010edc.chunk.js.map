{"version":3,"sources":["Home.js","Button.js","Quiz.js","QuizCompleted.js","QuizController.js","AnswerButtons.js","PlayButton.js","InstructionsText.js","UpwardIntervalExercise.js","DownwardIntervalExercise.js","SimultaneousIntervalExercise.js","App.js","index.js"],"names":["Home","to","className","href","Component","Button","props","Quiz","state","currentExercise","answer","questionGenerator","submittedAnswers","numFirstTry","handleAnswerClick","bind","handleContinueClick","handleFinishClick","e","submittedAnswer","currentTarget","value","this","length","setState","concat","onFinishClick","questionCompleted","includes","isLastExercise","numExercises","exerciseClass","onAnswerClick","onClick","QuizCompleted","message","onAgainClick","QuizController","finished","handleAgainClick","resetQuiz","AnswerButton","text","color","layoutClassName","INTERVAL_INFO","m2","friendlyName","M2","m3","M3","P4","d5","P5","m6","M6","m7","M7","POSSIBLE_INTERVALS","Object","keys","AnswerButtons","entries","map","intervalName","intervalFriendlyName","correctAnswer","toString","key","PlayButton","InstructionsText","generateRandomUpwardInterval","max","Math","floor","random","UpwardIntervalExercise","playInterval","synth","Tone","Synth","toMaster","topNote","Teoria","interval","note","topNoteName","name","accidental","octave","triggerAttackRelease","now","Time","generateRandomDownwardInterval","DownwardIntervalExercise","direction","generateRandomSimultaneousInterval","SimultaneousIntervalExercise","PolySynth","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f010edc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Home.css'\nimport './LinkButton.css'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <p>\n                    Welcome to the listening app\n                </p>\n\n                <Link\n                    to=\"/upward-intervals\"\n                    className=\"link-button start-quiz-button\"\n                >\n                    Upward Intervals\n                </Link>\n                <Link\n                    to=\"/downward-intervals\"\n                    className=\"link-button start-quiz-button\"\n                >\n                    Downward Intervals\n                </Link>\n                <Link\n                    to=\"/simultaneous-intervals\"\n                    className=\"link-button start-quiz-button\"\n                >\n                    Simultaneous Intervals\n                </Link>\n                <a\n                    href=\"https://github.com/ruthie/listening-app\"\n                    className=\"source-link\"\n                >\n                    Source Code\n                </a>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.css';\n\nfunction Button({ className, ...props }) {\n    return (\n        <button className={`button ${className}`} {...props} />\n    )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n    text: PropTypes.string,\n}\n\nexport default Button\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from './Button.js'\nimport './Quiz.css';\n\n\nclass Quiz extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currentExercise: 0,\n            answer: this.props.questionGenerator(),\n            submittedAnswers: [],\n            numFirstTry: 0,\n        }\n\n        this.handleAnswerClick = this.handleAnswerClick.bind(this)\n        this.handleContinueClick = this.handleContinueClick.bind(this)\n        this.handleFinishClick = this.handleFinishClick.bind(this)\n    }\n\n    handleAnswerClick(e) {\n        const submittedAnswer = e.currentTarget.value\n\n        if (\n            // this is the first guess for this question\n            this.state.submittedAnswers.length === 0\n            // and it was correct\n            && submittedAnswer === this.state.answer\n        ) {\n            this.setState({\n                numFirstTry: this.state.numFirstTry + 1,\n            })\n        }\n\n        this.setState({\n            submittedAnswers: this.state.submittedAnswers.concat([submittedAnswer]),\n        })\n    }\n\n    handleContinueClick() {\n        this.setState({\n            submittedAnswers: [],\n            answer: this.props.questionGenerator(),\n            currentExercise: this.state.currentExercise + 1,\n        })\n    }\n\n    handleFinishClick() {\n        this.props.onFinishClick(this.state.numFirstTry)\n\n        // clear quiz state for next time\n        this.setState({\n            currentExercise: 0,\n            answer: this.props.questionGenerator(),\n            submittedAnswers: [],\n            numFirstTry: 0,\n        })\n    }\n\n    render() {\n        const questionCompleted = (\n            // we've answered correctly\n            this.state.submittedAnswers.includes(this.state.answer)\n        )\n        const isLastExercise = (\n            // and this is not the last exercise\n            this.state.currentExercise === this.props.numExercises - 1\n        )\n\n        return (\n            <div className=\"quiz\">\n                <this.props.exerciseClass\n                    answer={this.state.answer}\n                    submittedAnswers={this.state.submittedAnswers}\n                    onAnswerClick={this.handleAnswerClick}\n                />\n                {questionCompleted && (\n                    isLastExercise ? (\n                        <Button\n                            onClick={this.handleFinishClick}\n                            className=\"finish-button\"\n                        >\n                            Finish\n                        </Button>\n                    ) : (\n                        <Button\n                            onClick={this.handleContinueClick}\n                            className=\"continue-button\"\n                        >\n                            Continue\n                        </Button>\n                    ))}\n            </div>\n        )\n    }\n}\n\n\nQuiz.propTypes = {\n    numExercises: PropTypes.number,\n    onFinishClick: PropTypes.func,\n    // disabling eslint for the following line because eslint can't tell\n    // that exerciseClass is actually used\n    exerciseClass: PropTypes.elementType, // eslint-disable-line\n    questionGenerator: PropTypes.func,\n}\n\nexport default Quiz\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Button from './Button.js'\nimport './QuizCompleted.css'\n\nclass QuizCompleted extends Component {\n    render() {\n        const message = `You got ${this.props.numFirstTry} out of ${this.props.numExercises} on the first try!`;\n        return (\n            <div>\n                <p>\n                    {message}\n                </p>\n                <Button\n                    className=\"again-button\"\n                    onClick={this.props.onAgainClick}\n                >\n                    Try again\n                </Button>\n\n                <Link\n                    to=\"/\"\n                    className=\"link-button home-button\"\n                >\n                    Home\n                </Link>\n            </div>\n        )\n    }\n}\n\nQuizCompleted.propTypes = {\n    onAgainClick: PropTypes.func,\n    numFirstTry: PropTypes.number,\n    numExercises: PropTypes.number,\n}\n\nexport default QuizCompleted\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Quiz from './Quiz.js'\nimport QuizCompleted from './QuizCompleted.js'\n\nconst NUM_EXERCISES = 2;\n\nclass QuizController extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            numExercises: NUM_EXERCISES,\n            finished: false,\n            numFirstTry: 0,\n        }\n\n        this.handleFinishClick = this.handleFinishClick.bind(this)\n        this.handleAgainClick = this.handleAgainClick.bind(this)\n        this.resetQuiz = this.resetQuiz.bind(this)\n    }\n\n    handleFinishClick(numFirstTry) {\n        this.setState({\n            finished: true,\n            numFirstTry: numFirstTry,\n        })\n    }\n\n    resetQuiz() {\n        this.setState({\n            numExercises: NUM_EXERCISES,\n            finished: false,\n            numFirstTry: 0,\n        })\n    }\n\n    handleAgainClick() {\n        this.resetQuiz()\n    }\n\n    render() {\n        const renderedComponent = (\n            this.state.finished\n                ? (\n                    <QuizCompleted\n                        onAgainClick={this.handleAgainClick}\n                        numExercises={this.state.numExercises}\n                        numFirstTry={this.state.numFirstTry}\n                    />\n                )\n                : (\n                    <Quiz\n                        numExercises={this.state.numExercises}\n                        onFinishClick={this.handleFinishClick}\n                        exerciseClass={this.props.exerciseClass}\n                        questionGenerator={this.props.questionGenerator}\n                    />\n                )\n        )\n\n        return renderedComponent\n    }\n}\n\nQuizController.propTypes = {\n    exerciseClass: PropTypes.elementType,\n    questionGenerator: PropTypes.func,\n}\n\nexport default QuizController\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './AnswerButtons.css';\n\nfunction AnswerButton({ text, onClick, value, color, layoutClassName }) {\n    return (\n        <button\n            value={value}\n            onClick={onClick}\n            className={`answer-button ${color} ${layoutClassName}`}\n        >\n            {text}\n        </button>\n    )\n}\n\nAnswerButton.propTypes = {\n    text: PropTypes.string,\n    value: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n    layoutClassName: PropTypes.string,\n}\n\nconst INTERVAL_INFO = {\n    m2: {\n        friendlyName: 'Minor 2nd',\n        layoutClassName: 'minor2',\n    },\n    M2: {\n        friendlyName: 'Major 2nd',\n        layoutClassName: 'major2',\n    },\n    m3: {\n        friendlyName: 'Minor 3rd',\n        layoutClassName: 'minor3',\n    },\n    M3: {\n        friendlyName: 'Major 3rd',\n        layoutClassName: 'major3',\n    },\n    P4: {\n        friendlyName: 'Perfect 4th',\n        layoutClassName: 'perfect4',\n    },\n    d5: {\n        friendlyName: 'Diminished 5th',\n        layoutClassName: 'diminished5',\n    },\n    P5: {\n        friendlyName: 'Perfect 5th',\n        layoutClassName: 'perfect5',\n    },\n    m6: {\n        friendlyName: 'Minor 6th',\n        layoutClassName: 'minor6',\n    },\n    M6: {\n        friendlyName: 'Major 6th',\n        layoutClassName: 'major6',\n    },\n    m7: {\n        friendlyName: 'Minor 7th',\n        layoutClassName: 'minor7',\n    },\n    M7: {\n        friendlyName: 'Major 7th',\n        layoutClassName: 'major7',\n    },\n}\n\nexport const POSSIBLE_INTERVALS = Object.keys(INTERVAL_INFO)\n\nclass AnswerButtons extends Component {\n    render() {\n        return (\n            <div className=\"answer-buttons-container\">\n                {Object.entries(INTERVAL_INFO).map(([intervalName, displayInfo]) => {\n                    const intervalFriendlyName = displayInfo.friendlyName\n\n                    let color = 'white'\n                    if (this.props.submittedAnswers.includes(intervalName)) {\n                        color = intervalName === this.props.correctAnswer.toString() ? 'green' : 'red'\n                    }\n\n                    return (\n                        <AnswerButton\n                            key={intervalName}\n                            text={intervalFriendlyName}\n                            value={intervalName}\n                            color={color}\n                            onClick={this.props.onAnswerClick}\n                            layoutClassName={\n                                INTERVAL_INFO[intervalName].layoutClassName\n                            }\n                        />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nAnswerButtons.propTypes = {\n    correctAnswer: PropTypes.string,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string),\n    onAnswerClick: PropTypes.func,\n}\n\nexport default AnswerButtons\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MdVolumeUp } from 'react-icons/md';\n\nimport Button from './Button.js'\nimport './PlayButton.css'\n\nfunction PlayButton({ onClick }) {\n    return (\n        <Button\n            onClick={onClick}\n            className=\"play-button\"\n        >\n            <div>\n                <MdVolumeUp className=\"play-button-sound-icon\" />\n                Play Interval\n            </div>\n        </Button>\n    )\n}\n\nPlayButton.propTypes = {\n    onClick: PropTypes.func,\n}\n\nexport default PlayButton\n","import React from 'react';\n\nimport './InstructionsText.css'\n\nfunction InstructionsText(props) {\n    return (\n        <p className=\"instructions-text\" {...props} />\n    )\n}\n\nexport default InstructionsText\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport AnswerButtons, { POSSIBLE_INTERVALS } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\n\nexport function generateRandomUpwardInterval() {\n    return POSSIBLE_INTERVALS[getRandomInt(POSSIBLE_INTERVALS.length)]\n}\n\nclass UpwardIntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const synth = new Tone.Synth().toMaster()\n        const bottomNoteName = 'C4'\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNoteName), Teoria.interval(this.props.answer),\n        )\n        const topNoteName = topNote.name() + topNote.accidental() + topNote.octave()\n\n        synth.triggerAttackRelease(bottomNoteName, '4n')\n        synth.triggerAttackRelease(topNoteName, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { answer, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>Identify the interval</InstructionsText>\n\n                <AnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nUpwardIntervalExercise.propTypes = {\n    answer: PropTypes.string,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default UpwardIntervalExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport AnswerButtons, { POSSIBLE_INTERVALS } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport function generateRandomDownwardInterval() {\n    return POSSIBLE_INTERVALS[getRandomInt(POSSIBLE_INTERVALS.length)]\n}\n\nclass DownwardIntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n    playInterval() {\n        const interval = Teoria.interval(this.props.answer).direction('down');\n\n        const synth = new Tone.Synth().toMaster()\n        const bottomNoteName = 'C5'\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNoteName), interval,\n        )\n        const topNoteName = topNote.name() + topNote.accidental() + topNote.octave()\n\n        synth.triggerAttackRelease(bottomNoteName, '4n')\n        synth.triggerAttackRelease(topNoteName, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { answer, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>Identify the interval</InstructionsText>\n                <AnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nDownwardIntervalExercise.propTypes = {\n    answer: PropTypes.string,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default DownwardIntervalExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport AnswerButtons, { POSSIBLE_INTERVALS } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport function generateRandomSimultaneousInterval() {\n    return POSSIBLE_INTERVALS[getRandomInt(POSSIBLE_INTERVALS.length)]\n}\n\nclass SimultaneousIntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n    playInterval() {\n        const interval = Teoria.interval(this.props.answer).direction('down');\n\n        const synth = new Tone.PolySynth(2, Tone.Synth).toMaster()\n        const bottomNoteName = 'C5'\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNoteName), interval,\n        )\n        const topNoteName = topNote.name() + topNote.accidental() + topNote.octave()\n\n        synth.triggerAttackRelease([bottomNoteName, topNoteName], '2n')\n    }\n\n    render() {\n        const { answer, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>Identify the interval</InstructionsText>\n                <AnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nSimultaneousIntervalExercise.propTypes = {\n    answer: PropTypes.string,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default SimultaneousIntervalExercise\n","import React from 'react';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\n\nimport './App.css';\nimport Home from './Home.js';\nimport QuizController from './QuizController.js';\n\nimport UpwardIntervalExercise, { generateRandomUpwardInterval } from './UpwardIntervalExercise.js'\nimport DownwardIntervalExercise, { generateRandomDownwardInterval } from './DownwardIntervalExercise.js'\nimport SimultaneousIntervalExercise, { generateRandomSimultaneousInterval } from './SimultaneousIntervalExercise.js'\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"app\">\n                <Switch>\n                    <Route path=\"/upward-intervals\">\n                        <QuizController\n                            exerciseClass={UpwardIntervalExercise}\n                            questionGenerator={generateRandomUpwardInterval}\n                        />\n                    </Route>\n                    <Route path=\"/downward-intervals\">\n                        <QuizController\n                            exerciseClass={DownwardIntervalExercise}\n                            questionGenerator={generateRandomDownwardInterval}\n                        />\n                    </Route>\n                    <Route path=\"/simultaneous-intervals\">\n                        <QuizController\n                            exerciseClass={SimultaneousIntervalExercise}\n                            questionGenerator={generateRandomSimultaneousInterval}\n                        />\n                    </Route>\n\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));  /* eslint-disable-line */\n"],"sourceRoot":""}