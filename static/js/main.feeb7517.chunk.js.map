{"version":3,"sources":["Home.js","Button.js","Quiz.js","QuizCompleted.js","QuizController.js","utils.js","AnswerButtons.js","PlayButton.js","InstructionsText.js","UpwardIntervalExercise.js","DownwardIntervalExercise.js","SimultaneousIntervalExercise.js","UpwardIntervalTuningExercise.js","DownwardIntervalTuningExercise.js","SimultaneousIntervalTuningExercise.js","App.js","index.js"],"names":["Home","to","className","href","Component","Button","props","Quiz","state","currentExercise","exerciseInfo","questionGenerator","submittedAnswers","numFirstTry","handleAnswerClick","bind","handleContinueClick","handleFinishClick","e","submittedAnswer","currentTarget","value","this","length","answer","setState","concat","onFinishClick","questionCompleted","includes","isLastExercise","numExercises","exerciseClass","onAnswerClick","onClick","QuizCompleted","message","onAgainClick","NUM_EXERCISES","Number","parseInt","process","QuizController","finished","handleAgainClick","resetQuiz","getRandomInt","max","Math","floor","random","INTERVAL_INFO","m2","friendlyName","layoutClassName","M2","m3","M3","P4","d5","P5","m6","M6","m7","M7","ALL_INTERVALS","Object","keys","TUNING_INTERVALS","getRandomItemFromList","list","getRandomInterval","getRandomTuningInterval","POSSIBLE_DIRECTIONS","getRandomDirection","getRandomNoteInOctaveAbove","bottomNoteName","topNote","Teoria","interval","note","name","accidental","octave","getRandomPitchDeviation","AnswerButton","text","color","IntervalAnswerButtons","entries","map","intervalName","intervalFriendlyName","correctAnswer","toString","key","SharpFlatAnswerButtons","direction","string","charAt","toUpperCase","slice","PlayButton","InstructionsText","generateUpwardIntervalExercise","bottomNote","UpwardIntervalExercise","playInterval","synth","Tone","Synth","toMaster","topNoteName","triggerAttackRelease","now","Time","generateDownwardIntervalExercise","DownwardIntervalExercise","generateSimultaneousIntervalExercise","SimultaneousIntervalExercise","PolySynth","generateUpwardIntervalTuningExercise","pitchDeviation","UpwardIntervalTuningExercise","adjustedTopNotFreq","fq","toLowerCase","generateDownwardIntervalTuningExercise","DownwardIntervalTuningExercise","downwardInterval","adjustedBottomNotFreq","generateSimultaneousIntervalTuningExercise","SimultaneousIntervalTuningExercise","adjustedTopNoteFreq","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.feeb7517.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Home.css'\nimport './LinkButton.css'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <p>\n                    Welcome to the listening app\n                </p>\n\n                <Link\n                    to=\"/upward-intervals\"\n                    className=\"link-button start-quiz-button\"\n                >\n                    Upward Intervals\n                </Link>\n                <Link\n                    to=\"/downward-intervals\"\n                    className=\"link-button start-quiz-button\"\n                >\n                    Downward Intervals\n                </Link>\n                <Link\n                    to=\"/simultaneous-intervals\"\n                    className=\"link-button start-quiz-button\"\n                >\n                    Simultaneous Intervals\n                </Link>\n                <Link\n                    to=\"/upward-interval-tuning\"\n                    className=\"link-button start-quiz-button\"\n                >\n                    Upward Interval Tuning\n                </Link>\n                <Link\n                    to=\"/downward-interval-tuning\"\n                    className=\"link-button start-quiz-button\"\n                >\n                    Downward Interval Tuning\n                </Link>\n                <Link\n                    to=\"/simultaneous-interval-tuning\"\n                    className=\"link-button start-quiz-button\"\n                >\n                    Simultaneous Interval Tuning\n                </Link>\n                <a\n                    href=\"https://github.com/ruthie/listening-app\"\n                    className=\"source-link\"\n                >\n                    Source Code\n                </a>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.css';\n\nfunction Button({ className, ...props }) {\n    return (\n        <button className={`button ${className}`} {...props} />\n    )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n    text: PropTypes.string,\n}\n\nexport default Button\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from './Button.js'\nimport './Quiz.css';\n\n\nclass Quiz extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currentExercise: 0,\n            exerciseInfo: this.props.questionGenerator(),\n            submittedAnswers: [],\n            numFirstTry: 0,\n        }\n\n        this.handleAnswerClick = this.handleAnswerClick.bind(this)\n        this.handleContinueClick = this.handleContinueClick.bind(this)\n        this.handleFinishClick = this.handleFinishClick.bind(this)\n    }\n\n    handleAnswerClick(e) {\n        const submittedAnswer = e.currentTarget.value\n\n        if (\n            // this is the first guess for this question\n            this.state.submittedAnswers.length === 0\n            // and it was correct\n            && submittedAnswer === this.state.exerciseInfo.answer\n        ) {\n            this.setState({\n                numFirstTry: this.state.numFirstTry + 1,\n            })\n        }\n\n        this.setState({\n            submittedAnswers: this.state.submittedAnswers.concat([submittedAnswer]),\n        })\n    }\n\n    handleContinueClick() {\n        this.setState({\n            submittedAnswers: [],\n            exerciseInfo: this.props.questionGenerator(),\n            currentExercise: this.state.currentExercise + 1,\n        })\n    }\n\n    handleFinishClick() {\n        this.props.onFinishClick(this.state.numFirstTry)\n\n        // clear quiz state for next time\n        this.setState({\n            currentExercise: 0,\n            exerciseInfo: this.props.questionGenerator(),\n            submittedAnswers: [],\n            numFirstTry: 0,\n        })\n    }\n\n    render() {\n        const questionCompleted = (\n            // we've answered correctly\n            this.state.submittedAnswers.includes(this.state.exerciseInfo.answer)\n        )\n        const isLastExercise = (\n            // and this is not the last exercise\n            this.state.currentExercise === this.props.numExercises - 1\n        )\n\n        return (\n            <div className=\"quiz\">\n                <this.props.exerciseClass\n                    answer={this.state.exerciseInfo.answer}\n                    exerciseInfo={this.state.exerciseInfo}\n                    submittedAnswers={this.state.submittedAnswers}\n                    onAnswerClick={this.handleAnswerClick}\n                />\n                {questionCompleted && (\n                    isLastExercise ? (\n                        <Button\n                            onClick={this.handleFinishClick}\n                            className=\"finish-button\"\n                        >\n                            Finish\n                        </Button>\n                    ) : (\n                        <Button\n                            onClick={this.handleContinueClick}\n                            className=\"continue-button\"\n                        >\n                            Continue\n                        </Button>\n                    ))}\n            </div>\n        )\n    }\n}\n\n\nQuiz.propTypes = {\n    numExercises: PropTypes.number,\n    onFinishClick: PropTypes.func,\n\n    /* ExerciseClass and questionGenerator\n    *  The questionGenerator function needs to return an object that has\n    *  an answer key and any additional keys needed by the exercise class\n    *  For  example, for identifying intervals, the exercise needs to know\n    *  the correct answer, e.g. a fifth, but also needs to know what note to\n    *  start playing  on, so the object returned by the questionGenerator might\n    *  look like { answer: 'P5', bottomNote: 'C4'}\n    */\n    // disabling eslint for the following line because eslint can't tell\n    // that exerciseClass is actually used\n    exerciseClass: PropTypes.elementType, // eslint-disable-line\n    questionGenerator: PropTypes.func,\n}\n\nexport default Quiz\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Button from './Button.js'\nimport './QuizCompleted.css'\n\nclass QuizCompleted extends Component {\n    render() {\n        const message = `You got ${this.props.numFirstTry} out of ${this.props.numExercises} on the first try!`;\n        return (\n            <div>\n                <p>\n                    {message}\n                </p>\n                <Button\n                    className=\"again-button\"\n                    onClick={this.props.onAgainClick}\n                >\n                    Try again\n                </Button>\n\n                <Link\n                    to=\"/\"\n                    className=\"link-button home-button\"\n                >\n                    Home\n                </Link>\n            </div>\n        )\n    }\n}\n\nQuizCompleted.propTypes = {\n    onAgainClick: PropTypes.func,\n    numFirstTry: PropTypes.number,\n    numExercises: PropTypes.number,\n}\n\nexport default QuizCompleted\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Quiz from './Quiz.js'\nimport QuizCompleted from './QuizCompleted.js'\n\nconst NUM_EXERCISES = Number.parseInt(process.env.REACT_APP_NUM_QUESTIONS_IN_QUIZ, 10)\n\nclass QuizController extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            numExercises: NUM_EXERCISES,\n            finished: false,\n            numFirstTry: 0,\n        }\n\n        this.handleFinishClick = this.handleFinishClick.bind(this)\n        this.handleAgainClick = this.handleAgainClick.bind(this)\n        this.resetQuiz = this.resetQuiz.bind(this)\n    }\n\n    handleFinishClick(numFirstTry) {\n        this.setState({\n            finished: true,\n            numFirstTry: numFirstTry,\n        })\n    }\n\n    resetQuiz() {\n        this.setState({\n            numExercises: NUM_EXERCISES,\n            finished: false,\n            numFirstTry: 0,\n        })\n    }\n\n    handleAgainClick() {\n        this.resetQuiz()\n    }\n\n    render() {\n        const renderedComponent = (\n            this.state.finished\n                ? (\n                    <QuizCompleted\n                        onAgainClick={this.handleAgainClick}\n                        numExercises={this.state.numExercises}\n                        numFirstTry={this.state.numFirstTry}\n                    />\n                )\n                : (\n                    <Quiz\n                        numExercises={this.state.numExercises}\n                        onFinishClick={this.handleFinishClick}\n                        exerciseClass={this.props.exerciseClass}\n                        questionGenerator={this.props.questionGenerator}\n                    />\n                )\n        )\n\n        return renderedComponent\n    }\n}\n\nQuizController.propTypes = {\n    exerciseClass: PropTypes.elementType,\n    questionGenerator: PropTypes.func,\n}\n\nexport default QuizController\n","import Teoria from 'teoria';\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport const INTERVAL_INFO = {\n    m2: {\n        friendlyName: 'Minor 2nd',\n        layoutClassName: 'minor2',\n    },\n    M2: {\n        friendlyName: 'Major 2nd',\n        layoutClassName: 'major2',\n    },\n    m3: {\n        friendlyName: 'Minor 3rd',\n        layoutClassName: 'minor3',\n    },\n    M3: {\n        friendlyName: 'Major 3rd',\n        layoutClassName: 'major3',\n    },\n    P4: {\n        friendlyName: 'Perfect 4th',\n        layoutClassName: 'perfect4',\n    },\n    d5: {\n        friendlyName: 'Diminished 5th',\n        layoutClassName: 'diminished5',\n    },\n    P5: {\n        friendlyName: 'Perfect 5th',\n        layoutClassName: 'perfect5',\n    },\n    m6: {\n        friendlyName: 'Minor 6th',\n        layoutClassName: 'minor6',\n    },\n    M6: {\n        friendlyName: 'Major 6th',\n        layoutClassName: 'major6',\n    },\n    m7: {\n        friendlyName: 'Minor 7th',\n        layoutClassName: 'minor7',\n    },\n    M7: {\n        friendlyName: 'Major 7th',\n        layoutClassName: 'major7',\n    },\n}\n\nconst ALL_INTERVALS = Object.keys(INTERVAL_INFO)\nconst TUNING_INTERVALS = ['M2', 'm3', 'M3', 'P4', 'P5']\n\nfunction getRandomItemFromList(list) {\n    return list[getRandomInt(list.length)]\n}\n\nexport function getRandomInterval() {\n    return getRandomItemFromList(ALL_INTERVALS)\n}\n\nexport function getRandomTuningInterval() {\n    return getRandomItemFromList(TUNING_INTERVALS)\n}\n\nexport const POSSIBLE_DIRECTIONS = ['sharp', 'flat'];\n\nexport function getRandomDirection() {\n    return POSSIBLE_DIRECTIONS[getRandomInt(POSSIBLE_DIRECTIONS.length)]\n}\n\n/* Returns a random note name between C4 and C5 inclusive\n*/\nexport function getRandomNoteInOctaveAbove(bottomNoteName) {\n    // Doing this a silly way:  choose bottom note and add a random interval to it\n    const topNote = Teoria.interval(\n        Teoria.note(bottomNoteName), Teoria.interval(getRandomInterval()),\n    )\n    return topNote.name() + topNote.accidental() + topNote.octave()\n}\n\nexport function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function getRandomPitchDeviation() {\n    // For our two test subjects, 1.02 was barely possible\n    return Math.random() * (1.03 - 1.025) + 1.025\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { INTERVAL_INFO, POSSIBLE_DIRECTIONS, capitalizeFirstLetter } from './utils.js'\n\nimport './AnswerButtons.css';\n\nfunction AnswerButton({ text, onClick, value, color, layoutClassName }) {\n    return (\n        <button\n            value={value}\n            onClick={onClick}\n            className={`answer-button ${color} ${layoutClassName}`}\n        >\n            {text}\n        </button>\n    )\n}\n\nAnswerButton.propTypes = {\n    text: PropTypes.string,\n    value: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n    layoutClassName: PropTypes.string,\n}\n\nexport class IntervalAnswerButtons extends Component {\n    render() {\n        return (\n            <div className=\"interval-answer-buttons-container\">\n                {Object.entries(INTERVAL_INFO).map(([intervalName, displayInfo]) => {\n                    const intervalFriendlyName = displayInfo.friendlyName\n\n                    let color = 'white'\n                    if (this.props.submittedAnswers.includes(intervalName)) {\n                        color = intervalName === this.props.correctAnswer.toString() ? 'green' : 'red'\n                    }\n\n                    return (\n                        <AnswerButton\n                            key={intervalName}\n                            text={intervalFriendlyName}\n                            value={intervalName}\n                            color={color}\n                            onClick={this.props.onAnswerClick}\n                            layoutClassName={\n                                INTERVAL_INFO[intervalName].layoutClassName\n                            }\n                        />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nIntervalAnswerButtons.propTypes = {\n    correctAnswer: PropTypes.string,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string),\n    onAnswerClick: PropTypes.func,\n}\n\nexport class SharpFlatAnswerButtons extends Component {\n    render() {\n        return (\n            <div className=\"sharp-flat-answer-buttons-container\">\n                {POSSIBLE_DIRECTIONS.map((direction) => {\n                    let color = 'white'\n                    if (this.props.submittedAnswers.includes(direction)) {\n                        color = direction === this.props.correctAnswer.toString() ? 'green' : 'red'\n                    }\n\n                    return (\n                        <AnswerButton\n                            key={direction}\n                            text={capitalizeFirstLetter(direction)}\n                            value={direction}\n                            color={color}\n                            onClick={this.props.onAnswerClick}\n                            layoutClassName={direction}\n                        />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nSharpFlatAnswerButtons.propTypes = {\n    correctAnswer: PropTypes.string,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string),\n    onAnswerClick: PropTypes.func,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MdVolumeUp } from 'react-icons/md';\n\nimport Button from './Button.js'\nimport './PlayButton.css'\n\nfunction PlayButton({ onClick }) {\n    return (\n        <Button\n            onClick={onClick}\n            className=\"play-button\"\n        >\n            <div>\n                <MdVolumeUp className=\"play-button-sound-icon\" />\n                Play Interval\n            </div>\n        </Button>\n    )\n}\n\nPlayButton.propTypes = {\n    onClick: PropTypes.func,\n}\n\nexport default PlayButton\n","import React from 'react';\n\nimport './InstructionsText.css'\n\nfunction InstructionsText(props) {\n    return (\n        <p className=\"instructions-text\" {...props} />\n    )\n}\n\nexport default InstructionsText\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomInterval, getRandomNoteInOctaveAbove } from './utils.js';\nimport { IntervalAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\nexport function generateUpwardIntervalExercise() {\n    return {\n        answer: getRandomInterval(),\n        bottomNote: getRandomNoteInOctaveAbove('B3'),\n    }\n}\n\nclass UpwardIntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const synth = new Tone.Synth().toMaster()\n        const bottomNoteName = this.props.exerciseInfo.bottomNote\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNoteName), Teoria.interval(this.props.answer),\n        )\n        const topNoteName = topNote.name() + topNote.accidental() + topNote.octave()\n\n        synth.triggerAttackRelease(bottomNoteName, '4n')\n        synth.triggerAttackRelease(topNoteName, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { answer, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>Identify the interval</InstructionsText>\n\n                <IntervalAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nUpwardIntervalExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default UpwardIntervalExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomInterval, getRandomNoteInOctaveAbove } from './utils.js';\nimport { IntervalAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\nexport function generateDownwardIntervalExercise() {\n    return {\n        answer: getRandomInterval(),\n        topNote: getRandomNoteInOctaveAbove('B4'),\n    }\n}\n\nclass DownwardIntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n    playInterval() {\n        const interval = Teoria.interval(this.props.answer).direction('down');\n\n        const synth = new Tone.Synth().toMaster()\n        const topNoteName = this.props.exerciseInfo.topNote\n        const bottomNote = Teoria.interval(\n            Teoria.note(topNoteName), interval,\n        )\n        const bottomNoteName = bottomNote.name() + bottomNote.accidental() + bottomNote.octave()\n\n        synth.triggerAttackRelease(topNoteName, '4n')\n        synth.triggerAttackRelease(bottomNoteName, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { answer, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>Identify the interval</InstructionsText>\n                <IntervalAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nDownwardIntervalExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default DownwardIntervalExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomInterval, getRandomNoteInOctaveAbove } from './utils.js';\nimport { IntervalAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\nexport function generateSimultaneousIntervalExercise() {\n    return {\n        answer: getRandomInterval(),\n        bottomNote: getRandomNoteInOctaveAbove('B3'),\n    }\n}\n\nclass SimultaneousIntervalExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n    playInterval() {\n        const interval = Teoria.interval(this.props.answer)\n\n        const synth = new Tone.PolySynth(2, Tone.Synth).toMaster()\n        const bottomNoteName = this.props.exerciseInfo.bottomNote\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNoteName), interval,\n        )\n        const topNoteName = topNote.name() + topNote.accidental() + topNote.octave()\n\n        synth.triggerAttackRelease([bottomNoteName, topNoteName], '2n')\n    }\n\n    render() {\n        const { answer, submittedAnswers, onAnswerClick } = this.props;\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>Identify the interval</InstructionsText>\n                <IntervalAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nSimultaneousIntervalExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default SimultaneousIntervalExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomTuningInterval, getRandomNoteInOctaveAbove, getRandomDirection,\n    INTERVAL_INFO, getRandomPitchDeviation } from './utils.js';\nimport { SharpFlatAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\n\nexport function generateUpwardIntervalTuningExercise() {\n    return {\n        answer: getRandomDirection(),\n        interval: getRandomTuningInterval(),\n        bottomNote: getRandomNoteInOctaveAbove('B3'),\n        pitchDeviation: getRandomPitchDeviation(),\n    }\n}\n\nclass UpwardIntervalTuningExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const { bottomNote, pitchDeviation } = this.props.exerciseInfo\n\n        const synth = new Tone.Synth().toMaster()\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNote), Teoria.interval(this.props.exerciseInfo.interval),\n        )\n        const inTuneTopNoteFreq = topNote.fq();\n\n        const adjustmentRatio = this.props.answer === 'sharp' ? pitchDeviation : 1.0 / pitchDeviation\n        const adjustedTopNotFreq = inTuneTopNoteFreq * adjustmentRatio\n\n        synth.triggerAttackRelease(bottomNote, '4n')\n        synth.triggerAttackRelease(adjustedTopNotFreq, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { answer, exerciseInfo, submittedAnswers, onAnswerClick } = this.props;\n        const intervalName = INTERVAL_INFO[exerciseInfo.interval].friendlyName.toLowerCase()\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>\n                    Is the second note sharp or flat of a {intervalName} above the first note?\n                </InstructionsText>\n\n                <SharpFlatAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nUpwardIntervalTuningExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default UpwardIntervalTuningExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomTuningInterval, getRandomNoteInOctaveAbove, getRandomDirection,\n    INTERVAL_INFO, getRandomPitchDeviation } from './utils.js';\nimport { SharpFlatAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\n\nexport function generateDownwardIntervalTuningExercise() {\n    return {\n        answer: getRandomDirection(),\n        interval: getRandomTuningInterval(),\n        topNote: getRandomNoteInOctaveAbove('B3'),\n        pitchDeviation: getRandomPitchDeviation(),\n    }\n}\n\nclass DownwardIntervalTuningExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const { topNote, pitchDeviation, interval } = this.props.exerciseInfo\n        const downwardInterval = Teoria.interval(interval).direction('down');\n\n        const synth = new Tone.Synth().toMaster()\n        const bottomNote = Teoria.interval(\n            Teoria.note(topNote), downwardInterval,\n        )\n        const inTuneBottomNoteFreq = bottomNote.fq();\n\n        const adjustmentRatio = this.props.answer === 'sharp' ? pitchDeviation : 1.0 / pitchDeviation\n        const adjustedBottomNotFreq = inTuneBottomNoteFreq * adjustmentRatio\n\n        synth.triggerAttackRelease(topNote, '4n')\n        synth.triggerAttackRelease(adjustedBottomNotFreq, '4n', Tone.now() + Tone.Time('4n'))\n    }\n\n    render() {\n        const { answer, exerciseInfo, submittedAnswers, onAnswerClick } = this.props;\n        const intervalName = INTERVAL_INFO[exerciseInfo.interval].friendlyName.toLowerCase()\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>\n                    Is the second note sharp or flat of a {intervalName} below the first note?\n                </InstructionsText>\n\n                <SharpFlatAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nDownwardIntervalTuningExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default DownwardIntervalTuningExercise\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tone from 'tone';\nimport Teoria from 'teoria';\n\nimport { getRandomTuningInterval, getRandomNoteInOctaveAbove, getRandomDirection,\n    INTERVAL_INFO, getRandomPitchDeviation } from './utils.js';\nimport { SharpFlatAnswerButtons } from './AnswerButtons.js';\nimport PlayButton from './PlayButton.js';\nimport InstructionsText from './InstructionsText.js'\n\n\nexport function generateSimultaneousIntervalTuningExercise() {\n    return {\n        answer: getRandomDirection(),\n        interval: getRandomTuningInterval(),\n        bottomNote: getRandomNoteInOctaveAbove('B3'),\n        pitchDeviation: getRandomPitchDeviation(),\n    }\n}\n\nclass SimultaneousIntervalTuningExercise extends Component {\n    constructor() {\n        super()\n        this.playInterval = this.playInterval.bind(this)\n    }\n\n\n    playInterval() {\n        const { bottomNote, pitchDeviation } = this.props.exerciseInfo\n\n        const synth = new Tone.PolySynth(2, Tone.Synth).toMaster()\n        const topNote = Teoria.interval(\n            Teoria.note(bottomNote), Teoria.interval(this.props.exerciseInfo.interval),\n        )\n        const inTuneTopNoteFreq = topNote.fq();\n\n        const adjustmentRatio = this.props.answer === 'sharp' ? pitchDeviation : 1.0 / pitchDeviation\n        const adjustedTopNoteFreq = inTuneTopNoteFreq * adjustmentRatio\n\n        synth.triggerAttackRelease([bottomNote, adjustedTopNoteFreq], '2n')\n    }\n\n    render() {\n        const { answer, exerciseInfo, submittedAnswers, onAnswerClick } = this.props;\n        const intervalName = INTERVAL_INFO[exerciseInfo.interval].friendlyName.toLowerCase()\n\n        return (\n            <div>\n                <PlayButton\n                    onClick={this.playInterval}\n                />\n                <InstructionsText>\n                    Is the top note sharp or flat of a {intervalName} above the bottom note?\n                </InstructionsText>\n\n                <SharpFlatAnswerButtons\n                    onAnswerClick={onAnswerClick}\n                    correctAnswer={answer}\n                    submittedAnswers={submittedAnswers}\n                />\n            </div>\n        )\n    }\n}\n\n\nSimultaneousIntervalTuningExercise.propTypes = {\n    answer: PropTypes.string,\n    exerciseInfo: PropTypes.object,\n    submittedAnswers: PropTypes.arrayOf(PropTypes.string), // string ids  of Teoria intervals\n    onAnswerClick: PropTypes.func,\n}\n\nexport default SimultaneousIntervalTuningExercise\n","import React from 'react';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\n\nimport './App.css';\nimport Home from './Home.js';\nimport QuizController from './QuizController.js';\n\nimport UpwardIntervalExercise, { generateUpwardIntervalExercise } from './UpwardIntervalExercise.js'\nimport DownwardIntervalExercise, { generateDownwardIntervalExercise } from './DownwardIntervalExercise.js'\nimport SimultaneousIntervalExercise, { generateSimultaneousIntervalExercise } from './SimultaneousIntervalExercise.js'\nimport UpwardIntervalTuningExercise, { generateUpwardIntervalTuningExercise } from './UpwardIntervalTuningExercise.js'\nimport DownwardIntervalTuningExercise, { generateDownwardIntervalTuningExercise } from './DownwardIntervalTuningExercise.js'\nimport SimultaneousIntervalTuningExercise, { generateSimultaneousIntervalTuningExercise } from './SimultaneousIntervalTuningExercise.js'\n\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"app\">\n                <Switch>\n                    <Route path=\"/upward-intervals\">\n                        <QuizController\n                            exerciseClass={UpwardIntervalExercise}\n                            questionGenerator={generateUpwardIntervalExercise}\n                        />\n                    </Route>\n                    <Route path=\"/downward-intervals\">\n                        <QuizController\n                            exerciseClass={DownwardIntervalExercise}\n                            questionGenerator={generateDownwardIntervalExercise}\n                        />\n                    </Route>\n                    <Route path=\"/simultaneous-intervals\">\n                        <QuizController\n                            exerciseClass={SimultaneousIntervalExercise}\n                            questionGenerator={generateSimultaneousIntervalExercise}\n                        />\n                    </Route>\n                    <Route path=\"/upward-interval-tuning\">\n                        <QuizController\n                            exerciseClass={UpwardIntervalTuningExercise}\n                            questionGenerator={generateUpwardIntervalTuningExercise}\n                        />\n                    </Route>\n                    <Route path=\"/downward-interval-tuning\">\n                        <QuizController\n                            exerciseClass={DownwardIntervalTuningExercise}\n                            questionGenerator={generateDownwardIntervalTuningExercise}\n                        />\n                    </Route>\n                    <Route path=\"/simultaneous-interval-tuning\">\n                        <QuizController\n                            exerciseClass={SimultaneousIntervalTuningExercise}\n                            questionGenerator={generateSimultaneousIntervalTuningExercise}\n                        />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));  /* eslint-disable-line */\n"],"sourceRoot":""}